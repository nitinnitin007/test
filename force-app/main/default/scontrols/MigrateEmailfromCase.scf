<html>
<head>
    <link  href="/dCSS/Theme2/default/common.css" type="text/css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" >
    <link  href="/dCSS/Theme2/default/custom.css" type="text/css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" >
    <link  href="/css/assistive.css" type="text/css" media="aural,braille,embossed" rel="stylesheet" >
    <script language="javascript" src="https://www.salesforce.com/services/lib/ajax/beta3.3/sforceclient.js?browser=true" type="text/javascript"></script>
    <link rel="shortcut icon" href="https://na3.salesforce.com/favicon.ico">


<script>
	<!--
	
	//initialization
	var caseId = "";
	var contactId = "";

	var contactNameCache = new Array();		
	var accountCache = new Array();
	var casesForContactHtml = "";
	var caseContactIdCache = new Array();
	var caseCreatedDateCache = new Array();
	var caseSubjectCache = new Array();
	var caseDescriptionCache = new Array();
	var emailMessageActivityIdCache = new Array();
	var emailMessageObjectCache;
	
	
	//Async indicator flags
	var loadContactInProcess = false;
	
	function initPage() {
       sforceClient.registerInitCallback(setup);
       sforceClient.init("{!API_Session_ID}", "https://na3.salesforce.com/services/Soap/u/7.0", true);
    }
    
    //collect parameters passed from salesforce via merge fields
    function collectParams() {
    	caseId = "{!Case_ID}";
    	contactId = "{!Case_Contact_ID}";

    }
        
    //Use this function as the entry point for your DHTML and JAVASCRIPT processing
    function setup() {  
		collectParams();
		//displayCaseContactNameAsync(contactId);   
		  
		
		if (contactId) {
			//display the 
		
		 	//display the cases that this contact has owned
			displayCasesForContactAsync(contactId);
		}   
		
		retrieveEmailMessagesForCaseAsync(caseId);
    }
    
    function migrateEmails() {
    	var selectedCaseId = document.forms.search.caseselect.value;
    	
    	//alert(emailMessageObjectCache.length);
    	
    	if (selectedCaseId) {
    		//get the emails that are associated with this case, from the cache
    		for (var i = 0; i < emailMessageObjectCache.length; i++) {
    			alert("processing " + emailMessageObjectCache[i].get("id"));
    			var emailMessage = emailMessageObjectCache[i];
    			emailMessage.set("ParentId", selectedCaseId);
    			//save this item
    			var saveResult = emailMessage.save();
    			alert(saveResult);
    			
    			var task = new Sforce.Dynabean("task");
    			task.set("id", emailMessage.get("activityId"));
    			task.set("whatid", selectedCaseId);
    			var taskSaveResult = task.save();
    			
    			alert(taskSaveResult);
    			
    		}
    		
    	} else {
    		alert("Please select a case");
    	}
    }
    
    
    //master call for displaying all the case information for a selected case
    function displayCaseDetails() {
    
    	var selectedCaseId = document.forms.search.caseselect.value;    	
    	
    	var selectedContactId = caseContactIdCache[selectedCaseId];
    	//alert(selectedContactId);	
    	//alert(selectedCaseId);
    
    	displayCaseContactNameAsync(selectedContactId);
    	//display case details found on case record
    	document.getElementById("caseCreatedDate").innerHTML = caseCreatedDateCache[selectedCaseId];
    	document.getElementById("caseSubject").innerHTML = caseSubjectCache[selectedCaseId];
    	document.getElementById("caseDescription").innerHTML = "<textarea cols=40 rows=10 disabled>" + caseDescriptionCache[selectedCaseId] + "</textarea>";
    	
    	//load all the emails that are associated with the selected case
		
    }
    
    //start block to load cache for emailmessages          
    function retrieveEmailMessagesForCaseAsync(id) {
   		
   		var query = "Select e.Id, e.ParentId, e.activityId From EmailMessage e where e.ParentId = '" + id + "'";
   		sforceClient.query(query, executeQueryForEmailMessages);
    	
    }
    
    function executeQueryForEmailMessages(result) {
    	//release the contents of the cache
    	emailMessageActivityIdCache = new Array();
    	//emailMessageObjectCache = null;
        
    	if (result.className != "Fault") {
     		if (result.records.length > 0) {
     			
     			emailMessageObjectCache = result.records;
     			alert (emailMessageObjectCache.length);
     		
     			//load the caseNumberCache
     			for (var i = 0; i < result.records.length; i++) {
	     			var singleEmailMessage = result.records[i];	     				     			
	     			//load the other case related caches
	     			emailMessageActivityIdCache[singleEmailMessage.get("id")] = singleEmailMessage.get("activityId");
					//alert(emailMessageActivityIdCache[singleEmailMessage.get("id")]);
     			}  	   
     			
     			 			
     				
     		}     		
     	} 
     	
     	
    }
    
    //end block to display cases for a contact	

    //start block to display cases for a contact   
    function displayCasesForContactAsync(contactId) {
		retrieveCasesForContactAsync(contactId, displayCasesForContactHtml);
	}   
	
	function displayCasesForContactHtml(htmlContent) {
		//print out here
		document.getElementById("casesSelectHtml").innerHTML = "<select name=\"caseselect\" id=\"caseselect\" size=\"10\" onclick=\"displayCaseDetails()\">" + htmlContent + "</select>";
		//after we've used this content once, expire it
		casesForContactHtml = "";
	}
    
    function retrieveCasesForContactAsync(id, processCasesForContact) {

   		var processResult = function (result) {   			
   			executeQueryForCases(result);
   			processCasesForContact(casesForContactHtml);
   		};
   		
   		var query = "select casenumber, createddate, subject, description, id, contactid from case where contactid = '" + id + "'";
   		sforceClient.query(query, processResult);
    	
    }
    
    function executeQueryForCases(result) {
    	//release the contents of the cache
    	caseContactIdCache = new Array();
    	caseCreatedDateCache = new Array();
    	caseSubjectCache = new Array();
    	caseDescriptionCache = new Array();
        
    	if (result.className != "Fault") {
     		if (result.records.length > 0) {
     			//load the caseNumberCache
     			for (var i = 0; i < result.records.length; i++) {
	     			var singleCase = result.records[i];
	     			
	     			casesForContactHtml += "<option value=\"" + singleCase.get("id") + "\">" + singleCase.get("casenumber") + "</option>";
	     			
	     			//add value to the caseNumberCache
	     			if (singleCase.get("contactid")) {
	     				caseContactIdCache[singleCase.get("id")] = singleCase.get("contactid");
	     			}
	     			
	     			//load the other case related caches
	     			caseCreatedDateCache[singleCase.get("id")] = singleCase.get("createddate");
	     			caseSubjectCache[singleCase.get("id")] = singleCase.get("subject");
	     			caseDescriptionCache[singleCase.get("id")] = singleCase.get("description");
     			}  		
     		}     		
     	} 
    }
    
    //end block to display cases for a contact

    
    //start block to display a contact name    
    function displayCaseContactNameAsync(id) {
		updateContactNameCacheAsync(id, displayCaseContactName);
	}   
	
	function displayCaseContactName(name) {
		//print out here
		document.getElementById("caseContactName").innerHTML = name;
	}
    
    function updateContactNameCacheAsync(id, processContact) {
    	
    	if 	(contactNameCache[id]) {
    		processContact(contactNameCache[id]);
    	} else {
    		var processResult = function (result) {   			
    			updateContactNameCache(id, result);
    			processContact(contactNameCache[id]);
    		};
    		
    		var query = "select firstname, lastname, id from contact where id = '" + id + "'";
    		sforceClient.query(query, processResult);
    	}
    }
    
    function updateContactNameCache(id, result) {    
    	if (result.className != "Fault") {
     		if (result.records.length == 1) {
     			//load the contactsCache
     			var singleContact = result.records[0];
     			//add value to the contactsCache
     			contactNameCache[id] = singleContact.get("firstname") + " " + singleContact.get("lastname");   		
     		}     		
     	} else {
     		contactNameCache[singleContact.get("id")] = "Not Found";     		
     	}
    }
    
    //end block to display contact name

    
 
 
-->
</script>

</head>
<body onload="initPage()" class="contract  detailPage">
<h3>Reassign Emails to Another Case</h3>
<p>
<form name="search" id="search">
	<table width="500">
		<tr><!--  row 1: search display -->
		<td valign="top"><!-- search column -->
			
			<table>
				<tr>
					<td>Account</td>
				<td><select name="account" id="account"></select></td>
				</tr>
				<tr>
					<td>Contact</td><td><select name="contact" id="contact"></select></td>
				</tr>
				<tr>
					<td>Case</td><td><input type="text" name="case" id="case" size="7"></input></td>
				</tr>
			</table>
			
		</td>
		<td valign="top">
		<!-- case selection column -->
		<div id="casesSelectHtml"></div>
		
		</td>
		<td valign="top">
		<!-- case detail column -->
		<table>
		<tr><td>Contact</td><td><div id="caseContactName"></div></td></tr>
		<tr><td>Account</td><td><div id="caseAccountName"></div></td></tr>
		<tr><td>Date Created</td><td><div id="caseCreatedDate"></div></td></tr>
		<tr><td>Subject</td><td><div id="caseSubject"></div></td></tr>
		<tr><td>Description</td><td><div id="caseDescription"></div></td></tr>
		</table>
		</td>
		</tr>
		<tr><!--  row 2:options and confirmation -->
		<td colspan=3><input type="button" value="Migrate Emails" onclick="migrateEmails()"></td>
		</tr>
	</table>
</form>
</p>
</body>
</html>